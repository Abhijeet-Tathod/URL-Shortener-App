openapi: 3.0.0
info:
  title: URL Shortener
  description: Node.js URL Shortener API Documentation
  version: 1.0.0

servers:
  - url: https://app.dhananjaythomble.me/api/v2
    description: My Production server

  - url: http://localhost:3000/api/v2
    description: Local server, API version 2


components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /auth/login:
    post:
      summary: Login
      description: Login to the API

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email: # <!--- form field name
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token.
                  user:
                    type: object
                    description: The user object.
                    properties:
                      _id:
                        type: string
                        description: The user ID.
                      name:
                        type: string
                        description: The user name.
                      email:
                        type: string
                        description: The user email.

        '400':
          description: Email and password is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.


  /auth/signup:
    post:
      summary: Signup
      description: Sign Up to the API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: Signup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: string
                    description: OK message.


        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

        '500':
          description: Error creating user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /url:
    post:
      summary: Create a new URL
      description: Create a new Short URL from a original URL

      security:
        - BearerAuth: [ ]

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The original URL to shorten.

      responses:
        '200':
          description: URL created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  shortUrl:
                    type: string
                    description: The shortened URL.

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

        '500':
          description: Error creating URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /url/{id}:
    get:
      summary: Redirect to the original URL
      description: Redirect to the original URL

      parameters:
        - in: path
          name: id
          required: true
          description: The shortened URL ID
          schema:
            type: string

      responses:
        '302':
          description: Redirect to the original URL

        '404':
          description: Original URL not found for the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

        '500':
          description: Error redirecting to the original URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

  /history:
    get:
      summary: Get the history of shortened URLs
      description: Get the history of all shortened URLs generated by the current Logged In user

      security:
        - BearerAuth: [ ]

      responses:
        '200':
          description: List of shortened URLs with their original URLs
          content:
            application/json:
              schema:
                type: object
                properties:
                  urlArray:
                    type: array
                    description: The list of shortened URLs and their corresponding original URLs.
                    items:
                      type: object
                      properties:
                        shortUrl:
                          type: string
                          description: The shortened URL ID.
                        originalUrl:
                          type: string
                          description: The Original URL Address.


        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.

        '500':
          description: Error getting history
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.